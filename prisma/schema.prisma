generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("DATABASE_URL")
}

model Users {
  id           Int           @id @default(autoincrement())
  name         String
  birthday     String
  phone        String?       @unique
  cpf          String        @unique
  email        String        @unique
  password     String
  BankAccounts BankAccounts?
  CreditCard   CreditCard?
  Sessions     Sessions?
  Transactions Transactions?

  @@map("users")
}

model Sessions {
  id     Int    @id @default(autoincrement())
  token  String @unique
  userId Int    @unique
  user   Users  @relation(fields: [userId], references: [id])

  @@map("sessions")
}

model Categories {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  Transactions Transactions[]

  @@map("categories")
}

model CreditCard {
  id             Int            @id @default(autoincrement())
  name           String
  number         String
  lastPaymentDay String
  gracePeriod    String
  userId         Int            @unique
  user           Users          @relation(fields: [userId], references: [id])
  Transactions   Transactions[]

  @@map("credit-card")
}

model BankAccounts {
  id            Int            @id @default(autoincrement())
  bankName      String
  accountNumber String
  amount        Int
  userId        Int            @unique
  user          Users          @relation(fields: [userId], references: [id])
  Transactions  Transactions[]

  @@map("bank-accounts")
}

model Transactions {
  id            Int           @id @default(autoincrement())
  description   String
  amount        Int
  type          String
  userId        Int           @unique
  categoryId    Int
  creditCardId  Int?
  bankAccountId Int?
  bankAccount   BankAccounts? @relation(fields: [bankAccountId], references: [id])
  category      Categories    @relation(fields: [categoryId], references: [id])
  creditCard    CreditCard?   @relation(fields: [creditCardId], references: [id])
  user          Users         @relation(fields: [userId], references: [id])

  @@map("transactions")
}
